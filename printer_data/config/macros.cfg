[gcode_macro probe_reset]
gcode:
    SET_PIN PIN=probe_reset_pin VALUE=0
    G4 P300
    SET_PIN PIN=probe_reset_pin VALUE=1
    G4 P100

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

#Needed for KAMP
[exclude_object]

[pause_resume]

[gcode_macro START_PRINT]
gcode:
    #Set Params
    {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}

    #Set Positioning
    G90 ;Absolute Positioning
    G28 ;Home printer
    G0 Z2; Position for heat soak

    M140 S{BED_TEMP} ;Start Bed Heater
    
    M109 S150 ;Set to Probing temp
    
    M190 S{BED_TEMP} ;Wait for bed to reach temperature

    CLEAN_NOZZLE ;Wipe Nozzle

    G28 Z METHOD=CONTACT CALIBRATE=1 ;Calibrate Z

    BED_MESH_CALIBRATE ;Level the Bed

    CLEAN_NOZZLE ;Wipe Nozzle

    G28 Z METHOD=CONTACT CALIBRATE=1  ;Calibrate Z after bed mesh
    
    G1 X-2 Y-1 Z10 ;Move to safe position for heating

    M109 S{EXTRUDER_TEMP} ;Set and wait for nozzle to reach temperature

    SET_GCODE_OFFSET Z=0.05 ;offset for thermal expansion

    G92 E0 ;Reset extrusion distance
    
    LINE_PURGE ;Purge Line

[gcode_macro END_PRINT]
gcode:
    #Get Printer built volume dimensions
    {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
    {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}

    #Fix-up extruder
    G91
    G92 E0                                  
    G1 E-2 Z0.2 F2400                        
    G1 X5 Y5 F6000                               
    G1 Z6                                     
    G90                                        

    #Present print
    G1 Z{printer.toolhead.position.z + 10} F600
    G1 X{10} Y{200} F6000
    M106 S0                                      
    M104 S0                                       
    M140 S0                                 

    #Disable Steppers
    M84 X Y E

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(230) %}      #edit to your park position
    {% set y = params.Y|default(230) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
   M220 S100 ; Reset Speed factor override percentage to default (100%)
   M221 S100 ; Reset Extrude factor override percentage to default (100%)
   G91 ; Set coordinates to relative
   {% if printer.extruder.temperature >= 170 %}
      G1 F1800 E-1 ; Retract filament 3 mm to prevent oozing
   {% endif %}
   ;if all axis are homed, lift the hotend to leave room for hot filament to ooze and to keep it clear of the bed.
   {% if printer.toolhead.homed_axes == "xyz" %}
      G1 F6000 Z10 ; Move Z Axis up 10 mm to allow filament ooze freely
      G90 ; Set coordinates to absolute
      G1 X0 Y150 F1000 ; Move Heat Bed to the front for easy print removal
      #M84 ; Disable stepper motors
   {% endif %}
   ;set part fan speed to zero.
   M106 S0
   CANCEL_PRINT_BASE

[gcode_macro CLEAN_NOZZLE]
gcode:
  SAVE_GCODE_STATE NAME=clean_nozzle_state
  G90
  G0 Z10 F5000
  G0 X200 Y-16 F10000
  {% for wipe in range(6) %}
    {% for coordinate in [(203,-16),(238,-16)] %}
      G0 X{coordinate[0]} Y{coordinate[1] - 0.1 * wipe} Z0 F6000
    {% endfor %}
  {% endfor %}
  G0 X200 Y-17 Z10 F5000
  RESTORE_GCODE_STATE NAME=clean_nozzle_state

[gcode_macro CENTER]
description: move Toolhead to centered Position
gcode:
    G0 X150 Y150 Z50 F3500

[gcode_macro HEAT_SOAK]
description: heats the bed for a while

variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None

## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0

gcode:
    {% set TARGET = params.TARGET | default(0) | float %}
    {% set DURATION = (params.DURATION | default(15) | int) * 60 %} ## minutes to seconds

    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0
    ;; fire up the heater
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }
    ;; run the fan to circulate air
    SET_FAN_SPEED FAN=Nevermore SPEED=0.65
    ;; put the bed and nozzle where they're a safe distance apart
    STATUS_HOMING
    MAYBE_HOME
    CENTER
    M84 ;; turn off steppers
    STATUS_BUSY
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }
    ;; pause the print during heat soak
    PAUSE_BASE

[gcode_macro CANCEL_HEAT_SOAK]
description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1
    SET_FAN_SPEED FAN=Nevermore SPEED=0

[delayed_gcode heat_soaker]
; ## debug
; { action_respond_info( printer['gcode_macro HEAT_SOAK'] | tojson )}
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}
    ## update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }
    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}
    {% if stage == "soaking" %}
        ## update soak countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }
        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"
    {% if stage in ("done", "cancel") %}
        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            M107 ; turn off fan
            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }
            ;; heat soak was cancelled -- also cancel the print
            CANCEL_PRINT
        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
            ;; heat soak is complete. Call the complete macro prior to starting the print
            SOAK_COMPLETE
            ;; resume / start the print
            RESUME_BASE
            STATUS_READY
        {% endif %}
        ## reset all state vars, except stage, which may be queried via the api
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0
    {% else %}
       {% if total_time_elapsed % 90 == 0 %}
            ## output status periodically
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}
        ## trigger ourselves again
        UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }
        ## dwell for 1ms to prevent from going idle
        G4 P1
    {% endif %}